tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.3/types.yaml
  - plugin:cloudify-openstack-plugin
  - plugin:cloudify-utilities-plugin

inputs:

  username:
    description: OS_USERNAME as specified in Openstack RC file.
    default: ehealth

  password:
    description: Openstack user password.
    default: ehealth

  project_id:
    default: 380b5f21bbab48d6a72c81c6822937e0

  tenant_name:
    description: OS_TENANT_NAME as specified in Openstack RC file.
    default: ehealth

  auth_url:
    description: OS_AUTH_URL as specified in Openstack RC file.
    default: http://10.5.1.95:5000/v3

  user_domain_name:
    default: Default

  region:
    description: OS_REGION_NAME as specified in Openstack RC file.
    default: "RegionOne"

  ssh_key:
    description: >
      the SSH keys to be installed on the servers
    default: cloudify-key

  image_pgw:
    type: string
    description: >
      Image to be used for compute instance
    default: eh-pgw
  image_sgw:
    type: string
    description: >
      Image to be used for compute instance
    default: eh-sgw
  image_epc-enablers:
    type: string
    description: >
      Image to be used for compute instance
    default: eh-epc-enablers
  image_mme:
    type: string
    description: >
      Image to be used for compute instance
    default: eh-mme
  flavor_name:
    description: >
      An Openstack Flavor ID.
    default: 'm1.small2'

  agent_key_public:
    description: >
      The content of the agent's public key.
    default: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDyESKLSmHhXZwtRfSeIc9ZZ1ARP0kxEcDBqRO84jVGB+pw9UXqynrpeFVA7tib9GYSxIDmRj8xbU9BSUX/rvktx/vzBS8yKwYeATY3ncuPwf6tQIWsz0dKLJmQAzlsz4U7qsJvedAxxEuPBorwyfuILzHA355GOjnecfeKN3HPTscGbIBdQyRDnww8VAk0O+uaGx6DCbOYQFSpz7lNt4+eIBoAKdjYAdOTq4mCNdl0g/qH2OP/ria4x00c56DoP5A4xeekL6T6QTxsqEvHVi/TNSnjD9ch9wDqcSPyey7W60qL/No3r+dB4Mx0QwM2F92C77vhLqJfUFAx6g9eCieh

  nameservers:
    default: [8.8.4.4, 8.8.8.8]

  public_network_name:
    default: op_1

  public_subnet_name:
    default: op_1-sub

  public_network_name1:
    default: provider1

  public_subnet_name1:
    default: provider1-v4

  heat_net_mgmt_subnet_cidr:
    default: 192.168.254.0/24
  heat_net_mgmt_subnet_allocation_pools:
    default:
      - start: 192.168.254.4
        end: 192.168.254.254

  heat_net_an_lte_subnet_cidr:
    default: 192.168.3.0/24
  heat_net_an_lte_subnet_allocation_pools:
    default:
      - start: 192.168.3.4
        end: 192.168.3.254

  heat_net_a_subnet_cidr:
    default: 192.168.1.0/24
  heat_net_a_subnet_allocation_pools:
    default:
      - start: 192.168.1.4
        end: 192.168.1.254

  heat_net_d_subnet_cidr:
    default: 192.168.4.0/24
  heat_net_d_subnet_allocation_pools:
    default:
      - start: 192.168.4.4
        end: 192.168.4.254

  heat_net_gw_subnet_cidr:
    default: 192.168.3.0/24
  heat_net_gw_subnet_allocation_pools:
    default:
      - start: 192.168.3.4
        end: 192.168.3.254

dsl_definitions:

  openstack_config: &openstack_config
    username: { get_input: username }
    password: { get_input: password }
    project_id: { get_input: project_id }
    auth_url: { get_input: auth_url }
    region: { get_input: region }
    user_domain_name: { get_input: user_domain_name }

node_templates:

  my-openstack-keypair:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      use_external_resource: true
      resource_id: { get_input: ssh_key }
      private_key_path: '/etc/cloudify/key'
      openstack_config: *openstack_config


  server_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      security_group:
        name: redirector-security-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
        - remote_ip_prefix: 0.0.0.0/0
          protocol: udp
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
          port_range_min: null
          port_range_max: null
      openstack_config: *openstack_config

  public_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: public_network_name }

  public_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: public_subnet_name }

  public_network1:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: public_network_name1 }

  public_subnet1:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: public_subnet_name1 }

  heat_net_mgmt:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      resource_id: 'HEAT_NET_MNGT'

  heat_net_an_lte:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      resource_id: 'HEAT_AN_LTE'

  heat_net_a:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      resource_id: 'HEAT_NET_A'

  heat_net_gw:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      resource_id: 'HEAT_NET_GW'

  heat_net_d:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      resource_id: 'HEAT_NET_D'

  heat_net_mgmt_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      subnet:
        ip_version: 4
        gateway_ip: 192.168.254.2
        cidr: { get_input: heat_net_mgmt_subnet_cidr }
        #enable_dhcp: False
        dns_nameservers: { get_input: nameservers }
        allocation_pools: { get_input: heat_net_mgmt_subnet_allocation_pools }
      openstack_config: *openstack_config
      resource_id: 'HEAT_NET_MGMT_SUBNET'
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_mgmt
      - type: cloudify.openstack.subnet_connected_to_router
        target: heat_net_mgmt_router

  heat_net_an_lte_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      subnet:
        ip_version: 4
        cidr: { get_input: heat_net_an_lte_subnet_cidr }
        #enable_dhcp: False
        dns_nameservers: { get_input: nameservers }
        allocation_pools: { get_input: heat_net_an_lte_subnet_allocation_pools }
      openstack_config: *openstack_config
      resource_id: 'HEAT_NET_AN_LTE_SUBNET'
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_an_lte


  heat_net_a_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      subnet:
        ip_version: 4
        cidr: { get_input: heat_net_a_subnet_cidr }
        #enable_dhcp: False
        dns_nameservers: { get_input: nameservers }
        allocation_pools: { get_input: heat_net_a_subnet_allocation_pools }
      openstack_config: *openstack_config
      resource_id: 'HEAT_NET_A_SUBNET'
    relationships:
      - type: cloudify.relationships.contained_in
        target:  heat_net_a


  heat_net_d_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      subnet:
        ip_version: 4
        cidr: { get_input: heat_net_d_subnet_cidr }
        #enable_dhcp: False
        dns_nameservers: { get_input: nameservers }
        allocation_pools: { get_input: heat_net_d_subnet_allocation_pools }
      openstack_config: *openstack_config
      resource_id: 'HEAT_NET_D_SUBNET'
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_d


  heat_net_gw_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      subnet:
        ip_version: 4
        cidr: { get_input: heat_net_gw_subnet_cidr }
        #enable_dhcp: False
        dns_nameservers: { get_input: nameservers }
        allocation_pools: { get_input: heat_net_gw_subnet_allocation_pools }
      openstack_config: *openstack_config
      resource_id: 'HEAT_NET_GW_SUBNET'
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_gw
      - type: cloudify.openstack.subnet_connected_to_router
        target: heat_net_gw_router

  heat_net_mgmt_router:
    type: cloudify.openstack.nodes.Router
    properties:
      openstack_config: *openstack_config
      resource_id: 'HEAT_NET_MGMT_ROUTER'
    relationships:
      - type: cloudify.relationships.connected_to
        target: public_network

  heat_net_gw_router:
    type: cloudify.openstack.nodes.Router
    properties:
      openstack_config: *openstack_config
      resource_id: 'HEAT_NET_GW_ROUTER'
    relationships:
      - type: cloudify.relationships.connected_to
        target: public_network1

  floating_ip_epc:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      resource_id: 'floating_ip_epc'
      openstack_config: *openstack_config
      floatingip:
        floating_network_name: { get_input: public_network_name }
        floating_ip_address: 10.2.35.170

  heat_sgw_net_mgmt_port:
    type: cloudify.openstack.nodes.Port
    properties:
      resource_id: 'heat_sgw_net_mgmt_port'
      openstack_config: *openstack_config
      fixed_ip: 192.168.254.20
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_mgmt
      - type: cloudify.relationships.depends_on
        target: heat_net_mgmt_subnet
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              port_security_enabled: false
              mac_address: 52:54:00:77:2f:b3

  heat_sgw_net_b_port:
    type: cloudify.openstack.nodes.Port
    properties:
      resource_id: 'heat_sgw_net_b_port'
      openstack_config: *openstack_config
      fixed_ip: 10.2.36.20
    relationships:
      - type: cloudify.relationships.contained_in
        target: public_network
      - type: cloudify.relationships.depends_on
        target: public_subnet
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              port_security_enabled: false
              mac_address: 52:54:00:b8:57:31

  heat_sgw_net_d_port:
    type: cloudify.openstack.nodes.Port
    properties:
      resource_id: 'heat_sgw_net_d_port'
      openstack_config: *openstack_config
      fixed_ip: 192.168.4.20
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_d
      - type: cloudify.relationships.depends_on
        target: heat_net_d_subnet
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              port_security_enabled: false
              mac_address: 52:54:00:91:ef:91

  heat_pgw_net_mgmt_port:
    type: cloudify.openstack.nodes.Port
    properties:
      resource_id: 'heat_pgw_net_mgmt_port'
      openstack_config: *openstack_config
      fixed_ip: 192.168.254.11
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_mgmt
      - type: cloudify.relationships.depends_on
        target: heat_net_mgmt_subnet
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              port_security_enabled: false
              mac_address: 52:54:00:1b:0a:d7

  heat_pgw_net_b_port:
    type: cloudify.openstack.nodes.Port
    properties:
      resource_id: 'heat_pgw_net_b_port'
      openstack_config: *openstack_config
      fixed_ip: 10.2.36.11
    relationships:
      - type: cloudify.relationships.contained_in
        target: public_network
      - type: cloudify.relationships.depends_on
        target: public_subnet
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              port_security_enabled: false
              mac_address: 52:54:00:9d:da:8a

  heat_pgw_net_a_port:
    type: cloudify.openstack.nodes.Port
    properties:
      resource_id: 'heat_pgw_net_a_port'
      openstack_config: *openstack_config
      fixed_ip: 192.168.1.11
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_a
      - type: cloudify.relationships.depends_on
        target: heat_net_a_subnet
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              port_security_enabled: false
              mac_address: 52:54:00:56:1d:1d

  heat_pgw_net_gw_port:
    type: cloudify.openstack.nodes.Port
    properties:
      resource_id: 'heat_pgw_net_gw_port'
      openstack_config: *openstack_config
      fixed_ip: 192.168.3.11
#      fixed_ip: 192.168.3.101
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_gw
      - type: cloudify.relationships.depends_on
        target: heat_net_gw_subnet
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              port_security_enabled: false
              mac_address: 52:54:00:75:68:d8

  heat_epc-enablers_net_mgmt_port:
    type: cloudify.openstack.nodes.Port
    properties:
      resource_id: 'heat_epc-enablers_net_mgmt_port'
      openstack_config: *openstack_config
      fixed_ip: 192.168.254.170
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_mgmt
      - type: cloudify.relationships.depends_on
        target: heat_net_mgmt_subnet
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              port_security_enabled: false
              mac_address: 52:54:00:38:d5:16

  heat_epc-enablers_net_a_port:
    type: cloudify.openstack.nodes.Port
    properties:
      resource_id: 'heat_epc-enablers_net_a_port'
      openstack_config: *openstack_config
      fixed_ip: 192.168.1.32
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_a
      - type: cloudify.relationships.depends_on
        target: heat_net_a_subnet
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              port_security_enabled: false
              mac_address: 52:54:00:9b:f9:e6

  heat_mme_net_mgmt_port:
    type: cloudify.openstack.nodes.Port
    properties:
      resource_id: 'heat_mme_net_mgmt_port'
      openstack_config: *openstack_config
      fixed_ip: 192.168.254.80
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_mgmt
      - type: cloudify.relationships.depends_on
        target: heat_net_mgmt_subnet
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              port_security_enabled: false
              mac_address: 52:54:00:62:79:96

  heat_mme_net_d_port:
    type: cloudify.openstack.nodes.Port
    properties:
      resource_id: 'heat_mme_net_d_port'
      openstack_config: *openstack_config
      fixed_ip: 192.168.4.80
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_d
      - type: cloudify.relationships.depends_on
        target: heat_net_d_subnet
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              port_security_enabled: false
              mac_address: 52:54:00:68:9e:ad

  heat_sgw:
    type: cloudify.openstack.nodes.Server
    properties:
      agent_config:
        install_method: none
      resource_id: 'INST_SGW'
      openstack_config: *openstack_config
      image: { get_input: image_sgw }
      flavor: { get_input: flavor_name }
    relationships:
      - target: my-openstack-keypair
        type: cloudify.openstack.server_connected_to_keypair
      - target: heat_sgw_net_mgmt_port
        type: cloudify.openstack.server_connected_to_port
      - target: heat_sgw_net_b_port
        type: cloudify.openstack.server_connected_to_port
      - target: heat_sgw_net_d_port
        type: cloudify.openstack.server_connected_to_port

  heat_pgw:
    type: cloudify.openstack.nodes.Server
    properties:
      agent_config:
        install_method: none
      resource_id: 'INST_PGW'
      openstack_config: *openstack_config
      image: { get_input: image_pgw }
      flavor: { get_input: flavor_name }
      agent_config:
        install_method: none
    relationships:
      - target: my-openstack-keypair
        type: cloudify.openstack.server_connected_to_keypair
      - target: heat_pgw_net_mgmt_port
        type: cloudify.openstack.server_connected_to_port
      - target: heat_pgw_net_a_port
        type: cloudify.openstack.server_connected_to_port
      - target: heat_pgw_net_b_port
        type: cloudify.openstack.server_connected_to_port
      - target: heat_pgw_net_gw_port
        type: cloudify.openstack.server_connected_to_port

  heat_mme:
    type: cloudify.openstack.nodes.Server
    properties:
      agent_config:
        install_method: none
      resource_id: 'INST_MME'
      openstack_config: *openstack_config
      image: { get_input: image_mme }
      flavor: { get_input: flavor_name }
      agent_config:
        install_method: none
    relationships:
      - target: my-openstack-keypair
        type: cloudify.openstack.server_connected_to_keypair
      - target: heat_mme_net_mgmt_port
        type: cloudify.openstack.server_connected_to_port
      - target: heat_mme_net_d_port
        type: cloudify.openstack.server_connected_to_port

  heat_epc-enablers:
    type: cloudify.openstack.nodes.Server
    properties:
      agent_config:
        install_method: none
      resource_id: 'INST_EPC-ENABLERS'
      openstack_config: *openstack_config
      image: { get_input: image_epc-enablers }
      flavor: { get_input: flavor_name }
      agent_config:
        install_method: none
    relationships:
      - target: my-openstack-keypair
        type: cloudify.openstack.server_connected_to_keypair
      - target: heat_epc-enablers_net_mgmt_port
        type: cloudify.openstack.server_connected_to_port
      - target: heat_epc-enablers_net_a_port
        type: cloudify.openstack.server_connected_to_port
      - target: floating_ip_epc
        type: cloudify.openstack.server_connected_to_floating_ip
      - type: cloudify.relationships.depends_on
        target: epc-enablers_cloud_config

  epc-enablers_cloud_config:
    type: cloudify.nodes.CloudInit.CloudConfig
    properties:
      resource_config:
        users:
        - name: root
#{ get_input: agent_user }
          groups: sudo
          shell: /bin/bash
#          sudo: ['ALL=(ALL) NOPASSWD:ALL']
          ssh-authorized-keys:
          - { get_input: agent_key_public }
        runcmd:
          - echo "epc-enablers_cloud_config" > /root/epc-enablers_cloud_config.txt
#sudo service ssh stop

