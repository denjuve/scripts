tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.3/types.yaml
  - plugin:cloudify-openstack-plugin
  - plugin:cloudify-utilities-plugin

inputs:

  username:
    description: OS_USERNAME as specified in Openstack RC file.
    default: ehealth

  password:
    description: Openstack user password.
    default: ehealth

  project_id:
    default: 380b5f21bbab48d6a72c81c6822937e0

  tenant_name:
    description: OS_TENANT_NAME as specified in Openstack RC file.
    default: ehealth

  auth_url:
    description: OS_AUTH_URL as specified in Openstack RC file.
    default: http://10.5.1.95:5000/v3

  user_domain_name:
    default: Default

  region:
    description: OS_REGION_NAME as specified in Openstack RC file.
    default: "RegionOne"


  ssh_key:
    description: >
      the SSH keys to be installed on the servers
    default: cloudify-key

  ssh_key:
    description: >
      the SSH keys to be installed on the servers
    default: cloudify-key

  image_secgw:
    type: string
    description: >
      Image to be used for compute instance
    default: eh-SecGW

  flavor_name:
    description: >
      An Openstack Flavor ID.
    default: 'm1.small.50'
  nameservers:
    default: [8.8.4.4, 8.8.8.8]

  public_network_name:
    default: provider1

  public_subnet_name:
    default: provider1-v4

  heat_net_d:
    default: HEAT_NET_D

  heat_net_radio:
    default: radio

  heat_net_d_subnet:
    default: HEAT_NET_D_SUBNET

  heat_net_radio_subnet:
    default: radio_sub

dsl_definitions:

  openstack_config: &openstack_config
    username: { get_input: username }
    password: { get_input: password }
    project_id: { get_input: project_id }
    auth_url: { get_input: auth_url }
    region: { get_input: region }
    user_domain_name: { get_input: user_domain_name }


node_templates:

  my-openstack-keypair:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      use_external_resource: true
      resource_id: { get_input: ssh_key }
      private_key_path: '/etc/cloudify/key'
      openstack_config: *openstack_config

  server_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      security_group:
        name: redirector-security-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
        - remote_ip_prefix: 0.0.0.0/0
          protocol: udp
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
          port_range_min: null
          port_range_max: null
      openstack_config: *openstack_config

  public_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: public_network_name }

  public_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: public_subnet_name }

  heat_net_d:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: heat_net_d }

  heat_net_d_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: heat_net_d_subnet }
#'HEAT_NET_D_SUBNET'

  heat_net_radio:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: heat_net_radio }

  heat_net_radio_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: heat_net_radio_subnet }

  secgw_net_d_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_config
      fixed_ip: 192.168.4.234
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_d
      - type: cloudify.relationships.depends_on
        target: heat_net_d_subnet
    interfaces:                              
      cloudify.interfaces.lifecycle:         
        create:                              
          inputs:
            args:
              port_security_enabled: false

  secgw_net_radio_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_config
      fixed_ip: 192.168.10.211
#192.168.10.10
    relationships:
      - type: cloudify.relationships.contained_in
        target: heat_net_radio
      - type: cloudify.relationships.depends_on
        target: heat_net_radio_subnet
    interfaces:                              
      cloudify.interfaces.lifecycle:         
        create:                              
          inputs: 
            args:
              port_security_enabled: false

  secgw_server:
    type: cloudify.openstack.nodes.Server
    properties:
      agent_config:
        install_method: none
      resource_id: 'SecGW'
      openstack_config: *openstack_config
      image: { get_input: image_secgw }
      flavor: { get_input: flavor_name }
    relationships:
      - target: my-openstack-keypair
        type: cloudify.openstack.server_connected_to_keypair
      - target: secgw_net_d_port
        type: cloudify.openstack.server_connected_to_port
      - target: secgw_net_radio_port
        type: cloudify.openstack.server_connected_to_port
